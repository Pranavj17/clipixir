Z2l0IGFkZCAu|1749925601|1
aHR0cHM6Ly9naXRodWIuY29tL1ByYW5hdmoxNy9jbGlwaXhpci5naXQ=|1749925549|2
IEBkb2MgIiIiCiAgU3RhcnRzIHRoZSBwaWNrZXIgbG9vcCBpbiB0aGUgY3VycmVudCB0ZXJtaW5hbC4KCiAgICAgIGlleD4gQ2xpcGl4aXIuUGlja2VyLnBpY2tfYW5kX2NvcHkoKQogICAgICAjIEludGVyYWN0aXZlIFRVSSBzaG93bgoKICAiIiI=|1749925483|1
IEBtb2R1bGVkb2MgIiIiCiAgSW50ZXJhY3RpdmUgQ0xJIHBpY2tlciBmb3IgY2xpcGJvYXJkIGVudHJpZXMuCgogICMjIFVzYWdlCgogICAgICBDbGlwaXhpci5QaWNrZXIucGlja19hbmRfY29weSgpCgogIFJ1bnMgYW4gaW50ZXJhY3RpdmUgbG9vcCB0byBzZWFyY2gsIHByZXZpZXcsIGFuZCByZWNvcHkgY2xpcGJvYXJkIGVudHJpZXMuCgogIC0gYC9zZWFyY2h0ZXJtYCDigJQgZnV6enkgc2VhcmNoIHRvIGZpbHRlci4KICAtIEluZGV4IG51bWJlciDigJQgY29weSBhbmQgcHJvbW90ZSB0byB0b3AgKGp1c3QgcHJlc3MgRW50ZXIgYWZ0ZXIgbnVtYmVyKS4KICAtIGBxYCDigJQgcXVpdC4KICAiIiIKCiAgQGRvYyAiIiIKICBTdGFydHMgdGhlIHBpY2tlciBsb29wIGluIHRoZSBjdXJyZW50IHRlcm1pbmFsLgoKICAgICAgaWV4PiBDbGlwaXhpci5QaWNrZXIucGlja19hbmRfY29weSgpCiAgICAgICMgSW50ZXJhY3RpdmUgVFVJIHNob3duCgogICIiIg==|1749925472|1
QG1vZHVsZWRvYyAiIiIKICBDbGlwaXhpciBpcyBhIHRlcm1pbmFsIGNsaXBib2FyZCBtYW5hZ2VyIGFuZCBoaXN0b3J5IHRyYWNrZXIuCgogICMjIEZlYXR1cmVzCgogICAgKiBBdXRvLXByb21vdGVzIG1vc3QgcmVjZW50IGNsaXBib2FyZCBlbnRyeS4KICAgICogRGVkdXBsaWNhdGVzIGFuZCBzdG9yZXMgbGFzdCAxMDAwIGNsaXBib2FyZCB0ZXh0cy4KICAgICogVHJhY2tzIHVzYWdlIGNvdW50IGFuZCBsYXN0IHVzZWQgdGltZXN0YW1wLgogICAgKiBQbGFpbiB0ZXh0IGhpc3RvcnkgZmlsZSwgZWFzeSB0byBpbnNwZWN0IG9yIGJhY2t1cC4KICAgICogUm9idXN0IGFnYWluc3QgY3Jhc2gsIHJlc3RhcnRzLCBhY2NpZGVudGFsIGJhZCBsaW5lcy4KCiAgIyMgRXhhbXBsZQoKICAgICAgIyBTdGFydCB0cmFja2luZyBjbGlwYm9hcmQgaW4gdGhlIGJhY2tncm91bmQKICAgICAgezpvaywgX3BpZH0gPSBDbGlwaXhpci5zdGFydF9saW5rKFtdKQoKICAgICAgIyBMaXN0IGNsaXBib2FyZCBoaXN0b3J5IChyZXR1cm5zIGxpc3Qgb2YgJXt2YWx1ZSwgY291bnQsIGxhc3RfdXNlZCwgLi4ufSkKICAgICAgQ2xpcGl4aXIubGlzdF9oaXN0b3J5KCkKCiAgICAgICMgUHJvbW90ZSBhIGNvcGllZCBlbnRyeSBleHBsaWNpdGx5IChpZiBub3QgYWxyZWFkeSB0cmFja2VkKQogICAgICBDbGlwaXhpci5wcm9tb3RlX3RvX3RvcF9hbmRfZGVkdXAoInlvdXIgY29waWVkIGNvbnRlbnQiKQoKICAiIiI=|1749925424|1
IEBtb2R1bGVkb2MgIiIiCiAgSW50ZXJhY3RpdmUgQ0xJIHBpY2tlciBmb3IgY2xpcGJvYXJkIGVudHJpZXMuCgogICMjIFVzYWdlCgogICAgICBDbGlwaXhpci5QaWNrZXIucGlja19hbmRfY29weSgpCgogIFJ1bnMgYW4gaW50ZXJhY3RpdmUgbG9vcCB0byBzZWFyY2gsIHByZXZpZXcsIGFuZCByZWNvcHkgY2xpcGJvYXJkIGVudHJpZXMuCgogIC0gYC9zZWFyY2h0ZXJtYCDigJQgZnV6enkgc2VhcmNoIHRvIGZpbHRlci4KICAtIEluZGV4IG51bWJlciDigJQgY29weSBhbmQgcHJvbW90ZSB0byB0b3AgKGp1c3QgcHJlc3MgRW50ZXIgYWZ0ZXIgbnVtYmVyKS4KICAtIGBxYCDigJQgcXVpdC4KICAiIiI=|1749925414|1
ICBAZG9jICIiIgogIFByb21vdGVzIHRoZSBnaXZlbiBjbGlwYm9hcmQgc3RyaW5nIHRvIHRoZSB0b3Agb2YgdGhlIGhpc3RvcnksIGluY3JlbWVudHMgaXRzIHVzYWdlIGNvdW50LAogIGFuZCByZW1vdmVzIG9sZGVyIGR1cGxpY2F0ZSBlbnRyaWVzLiBBbHNvIHVwZGF0ZXMgdGhlIHRpbWVzdGFtcC4KCiAgICAgIGlleD4gQ2xpcGl4aXIucHJvbW90ZV90b190b3BfYW5kX2RlZHVwKCJmb28gYmFyIikKICAgICAgOm9rICAjIChzaWRlIGVmZmVjdDogdXBkYXRlcyBmaWxlKQoKICAiIiI=|1749925398|1
ICBAZG9jICIiIgogIFJldHVybnMgYSBsaXN0IG9mIGAle3ZhbHVlLCBlbmNvZGVkLCBsYXN0X3VzZWQsIGNvdW50fWAgZW50cmllcywgbmV3ZXN0IGZpcnN0LgoKICAjIyBFeGFtcGxlCgogICAgICBpZXg+IENsaXBpeGlyLmxpc3RfaGlzdG9yeSgpCiAgICAgIFsle3ZhbHVlOiAiZm9vXG5iYXIiLCBjb3VudDogNCwgbGFzdF91c2VkOiAxNzE1NzUzMzQwLCBlbmNvZGVkOiAuLi59LCAuLi5dCgogICIiIg==|1749925381|1
Ci0tLQoKIyAqKkhleERvY3Mtc3R5bGUgRG9jdW1lbnRhdGlvbiBpbiBDb2RlKioKCiMjICoqbGliL2NsaXBpeGlyLmV4KioKCmBgYGVsaXhpcgpkZWZtb2R1bGUgQ2xpcGl4aXIgZG8KICBAbW9kdWxlZG9jICIiIgogIENsaXBpeGlyIGlzIGEgdGVybWluYWwgY2xpcGJvYXJkIG1hbmFnZXIgYW5kIGhpc3RvcnkgdHJhY2tlci4KCiAgIyMgRmVhdHVyZXMKCiAgICAqIEF1dG8tcHJvbW90ZXMgbW9zdCByZWNlbnQgY2xpcGJvYXJkIGVudHJ5LgogICAgKiBEZWR1cGxpY2F0ZXMgYW5kIHN0b3JlcyBsYXN0IDEwMDAgY2xpcGJvYXJkIHRleHRzLgogICAgKiBUcmFja3MgdXNhZ2UgY291bnQgYW5kIGxhc3QgdXNlZCB0aW1lc3RhbXAuCiAgICAqIFBsYWluIHRleHQgaGlzdG9yeSBmaWxlLCBlYXN5IHRvIGluc3BlY3Qgb3IgYmFja3VwLgogICAgKiBSb2J1c3QgYWdhaW5zdCBjcmFzaCwgcmVzdGFydHMsIGFjY2lkZW50YWwgYmFkIGxpbmVzLgoKICAjIyBFeGFtcGxlCgogICAgICAjIFN0YXJ0IHRyYWNraW5nIGNsaXBib2FyZCBpbiB0aGUgYmFja2dyb3VuZAogICAgICB7Om9rLCBfcGlkfSA9IENsaXBpeGlyLnN0YXJ0X2xpbmsoW10pCgogICAgICAjIExpc3QgY2xpcGJvYXJkIGhpc3RvcnkgKHJldHVybnMgbGlzdCBvZiAle3ZhbHVlLCBjb3VudCwgbGFzdF91c2VkLCAuLi59KQogICAgICBDbGlwaXhpci5saXN0X2hpc3RvcnkoKQoKICAgICAgIyBQcm9tb3RlIGEgY29waWVkIGVudHJ5IGV4cGxpY2l0bHkgKGlmIG5vdCBhbHJlYWR5IHRyYWNrZWQpCiAgICAgIENsaXBpeGlyLnByb21vdGVfdG9fdG9wX2FuZF9kZWR1cCgieW91ciBjb3BpZWQgY29udGVudCIpCgogICIiIg==|1749925341|1
UGlja2Vy|1749924862|3
bWFnZW50YQ==|1749924855|2
aGlnaGxpZ2h0X3NlYXJjaA==|1749924853|1
|1749924744|1
ZGVmbW9kdWxlIENsaXBpeGlyIGRvCiAgdXNlIEdlblNlcnZlcgogIEBoaXN0b3J5X2ZpbGUgImNsaXBib2FyZF9oaXN0b3J5LnR4dCIKICBAY2hlY2tfaW50ZXJ2YWwgODAwCiAgQG1heF9lbnRyaWVzIDEwMDAKCiAgZGVmIHN0YXJ0X2xpbmsoX29wdHMpIGRvCiAgICBHZW5TZXJ2ZXIuc3RhcnRfbGluayhfX01PRFVMRV9fLCAle30sIG5hbWU6IF9fTU9EVUxFX18pCiAgZW5kCgogIGRlZiBpbml0KF8pIGRvCiAgICBzY2hlZHVsZV9jaGVjaygpCiAgICB7Om9rLCAle2xhc3Q6IG5pbH19CiAgZW5kCgogIGRlZiBsaXN0X2hpc3RvcnkoKSBkbwogICAgY2FzZSBGaWxlLnJlYWQoQGhpc3RvcnlfZmlsZSkgZG8KICAgICAgezpvaywgY29udGVudHN9IC0+CiAgICAgICAgY29udGVudHMKICAgICAgICB8PiBTdHJpbmcuc3BsaXQoIlxuIiwgdHJpbTogdHJ1ZSkKICAgICAgICB8PiBFbnVtLm1hcCgmcGFyc2VfZW50cnkvMSkKICAgICAgICB8PiBFbnVtLmZpbHRlcigmaXNfbWFwLzEpCiAgICAgIF8gLT4KICAgICAgICBbXQogICAgZW5kCiAgZW5kCgogIGRlZnAgcGFyc2VfZW50cnkobGluZSkgZG8KICAgIGNhc2UgU3RyaW5nLnNwbGl0KGxpbmUsICJ8IikgZG8KICAgICAgW2VuYywgbGFzdF91c2VkLCBjb3VudF0gLT4KICAgICAgICB3aXRoIHs6b2ssIHZhbHVlfSA8LSBCYXNlLmRlY29kZTY0KGVuYyksCiAgICAgICAgICAgICB7bHUsICIifSA8LSBJbnRlZ2VyLnBhcnNlKGxhc3RfdXNlZCksCiAgICAgICAgICAgICB7Y250LCAiIn0gPC0gSW50ZWdlci5wYXJzZShjb3VudCkgZG8KICAgICAgICAgICV7CiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgICAgICAgZW5jb2RlZDogZW5jLAogICAgICAgICAgICBsYXN0X3VzZWQ6IGx1LAogICAgICAgICAgICBjb3VudDogY250CiAgICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgICAgXyAtPiBuaWwKICAgICAgICBlbmQKICAgICAgXyAtPiBuaWwKICAgIGVuZAogIGVuZAoKICBkZWYgaGFuZGxlX2luZm8oOmNoZWNrX2NsaXBib2FyZCwgc3RhdGUpIGRvCiAgICBjdXJyZW50ID0gZ2V0X2NsaXBib2FyZCgpCiAgICBub3cgPSA6b3Muc3lzdGVtX3RpbWUoOnNlY29uZCkKICAgIGVudHJpZXMgPSBsaXN0X2hpc3RvcnkoKQoKICAgIGFscmVhZHlfdG9wID0KICAgICAgY2FzZSBlbnRyaWVzIGRvCiAgICAgICAgWyV7dmFsdWU6IF5jdXJyZW50fSB8IF9dIC0+IHRydWUKICAgICAgICBfIC0+IGZhbHNlCiAgICAgIGVuZAoKICAgIGNvbmQgZG8KICAgICAgY3VycmVudCA9PSBzdGF0ZS5sYXN0IG9yIGN1cnJlbnQgPT0gIiIgb3IgYWxyZWFkeV90b3AgLT4KICAgICAgICBzY2hlZHVsZV9jaGVjaygpCiAgICAgICAgezpub3JlcGx5LCBzdGF0ZX0KICAgICAgdHJ1ZSAtPgogICAgICAgICMgUmVtb3ZlIGFsbCBleGlzdGluZyBvY2N1cnJlbmNlcwogICAgICAgIHJlc3QgPSBFbnVtLnJlamVjdChlbnRyaWVzLCAmKCYxLnZhbHVlID09IGN1cnJlbnQpKQogICAgICAgIGNvdW50ID0KICAgICAgICAgIChlbnRyaWVzCiAgICAgICAgICAgfD4gRW51bS5maWx0ZXIoJigmMS52YWx1ZSA9PSBjdXJyZW50KSkKICAgICAgICAgICB8PiBFbnVtLm1hcCgmICYxLmNvdW50KQogICAgICAgICAgIHw+IEVudW0ubWF4KGZuIC0+IDAgZW5kKSkgKyAxCgogICAgICAgIHVwZGF0ZWQgPSBbCiAgICAgICAgICAle3ZhbHVlOiBjdXJyZW50LCBlbmNvZGVkOiBCYXNlLmVuY29kZTY0KGN1cnJlbnQpLCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IGNvdW50fQogICAgICAgICAgfCByZXN0CiAgICAgICAgXQogICAgICAgIHdyaXRlX2VudHJpZXModXBkYXRlZCkKICAgICAgICBzY2hlZHVsZV9jaGVjaygpCiAgICAgICAgezpub3JlcGx5LCAle3N0YXRlIHwgbGFzdDogY3VycmVudH19CiAgICBlbmQKICBlbmQKCiAgZGVmIHByb21vdGVfdG9fdG9wX2FuZF9kZWR1cChzZWxlY3RlZF9jbGlwKSB3aGVuIGlzX2JpbmFyeShzZWxlY3RlZF9jbGlwKSBkbwogICAgbm93ID0gOm9zLnN5c3RlbV90aW1lKDpzZWNvbmQpCiAgICBlbnRyaWVzID0gbGlzdF9oaXN0b3J5KCkKCiAgICByZXN0ID0gRW51bS5yZWplY3QoZW50cmllcywgJigmMS52YWx1ZSA9PSBzZWxlY3RlZF9jbGlwKSkKICAgIGNvdW50ID0KICAgICAgKGVudHJpZXMKICAgICAgIHw+IEVudW0uZmlsdGVyKCYoJjEudmFsdWUgPT0gc2VsZWN0ZWRfY2xpcCkpCiAgICAgICB8PiBFbnVtLm1hcCgmICYxLmNvdW50KQogICAgICAgfD4gRW51bS5tYXgoZm4gLT4gMCBlbmQpKSArIDEKCiAgICB1cGRhdGVkID0gWwogICAgICAle3ZhbHVlOiBzZWxlY3RlZF9jbGlwLCBlbmNvZGVkOiBCYXNlLmVuY29kZTY0KHNlbGVjdGVkX2NsaXApLCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IGNvdW50fQogICAgICB8IHJlc3QKICAgIF0KICAgIHdyaXRlX2VudHJpZXModXBkYXRlZCkKICBlbmQKCiAgZGVmcCB3cml0ZV9lbnRyaWVzKGVudHJpZXMpIGRvCiAgICAjIEF1dG8tdHJpbSBsb2dpYwogICAgbm93ID0gOm9zLnN5c3RlbV90aW1lKDpzZWNvbmQpCiAgICBjdXRvZmYgPSBub3cgLSA3ICogMjQgKiAzNjAwCiAgICByZXN1bHQgPQogICAgICBpZiBsZW5ndGgoZW50cmllcykgPiBAbWF4X2VudHJpZXMgZG8KICAgICAgICBlbnRyaWVzCiAgICAgICAgfD4gRW51bS5zb3J0X2J5KGZuICV7bGFzdF91c2VkOiBsdSwgY291bnQ6IGNudH0gLT4ge2x1ID49IGN1dG9mZiwgY250LCBsdX0gZW5kLCA6ZGVzYykKICAgICAgICB8PiBFbnVtLnRha2UoQG1heF9lbnRyaWVzKQogICAgICBlbHNlCiAgICAgICAgZW50cmllcwogICAgICBlbmQKCiAgICBGaWxlLndyaXRlISgKICAgICAgQGhpc3RvcnlfZmlsZSwKICAgICAgKEVudW0ubWFwKHJlc3VsdCwgZm4gJXtlbmNvZGVkOiBlbmMsIGxhc3RfdXNlZDogbHUsIGNvdW50OiBjbnR9IC0+CiAgICAgICAgICIje2VuY318I3tsdX18I3tjbnR9IgogICAgICAgZW5kKQogICAgICAgfD4gRW51bS5qb2luKCJcbiIpKSA8PiAiXG4iCiAgICApCiAgZW5kCgogIGRlZnAgZ2V0X2NsaXBib2FyZCBkbwogICAge3RleHQsIDB9ID0gU3lzdGVtLmNtZCgicGJwYXN0ZSIsIFtdKQogICAgU3RyaW5nLnRyaW1fdHJhaWxpbmcodGV4dCkKICBlbmQKCiAgZGVmcCBzY2hlZHVsZV9jaGVjaygpLCBkbzogUHJvY2Vzcy5zZW5kX2FmdGVyKHNlbGYoKSwgOmNoZWNrX2NsaXBib2FyZCwgQGNoZWNrX2ludGVydmFsKQplbmQ=|1749924718|1
ZGVmbW9kdWxlIENsaXBpeGlyIGRvCiAgdXNlIEdlblNlcnZlcgogIEBoaXN0b3J5X2ZpbGUgImNsaXBib2FyZF9oaXN0b3J5LnR4dCIKICBAY2hlY2tfaW50ZXJ2YWwgODAwCiAgQG1heF9lbnRyaWVzIDEwMDAKCiAgZGVmIHN0YXJ0X2xpbmsoX29wdHMpIGRvCiAgICBHZW5TZXJ2ZXIuc3RhcnRfbGluayhfX01PRFVMRV9fLCAle30sIG5hbWU6IF9fTU9EVUxFX18pCiAgZW5kCgogIGRlZiBpbml0KF8pIGRvCiAgICBzY2hlZHVsZV9jaGVjaygpCiAgICB7Om9rLCAle2xhc3Q6IG5pbH19CiAgZW5kCgogICMgVXBkYXRlZCBsaXN0X2hpc3RvcnkKICBkZWYgbGlzdF9oaXN0b3J5KCkgZG8KICAgIGNhc2UgRmlsZS5yZWFkKEBoaXN0b3J5X2ZpbGUpIGRvCiAgICAgIHs6b2ssIGNvbnRlbnRzfSAtPgogICAgICAgIGNvbnRlbnRzCiAgICAgICAgfD4gU3RyaW5nLnNwbGl0KCJcbiIsIHRyaW06IHRydWUpCiAgICAgICAgfD4gRW51bS5tYXAoJnBhcnNlX2VudHJ5LzEpCiAgICAgICAgfD4gRW51bS5maWx0ZXIoJmlzX21hcC8xKQoKICAgICAgXyAtPgogICAgICAgIFtdCiAgICBlbmQKICBlbmQKCiAgZGVmcCBwYXJzZV9lbnRyeShsaW5lKSBkbwogICAgY2FzZSBTdHJpbmcuc3BsaXQobGluZSwgInwiKSBkbwogICAgICBbZW5jLCBsYXN0X3VzZWQsIGNvdW50XSAtPgogICAgICAgIGNhc2UgQmFzZS5kZWNvZGU2NChlbmMpIGRvCiAgICAgICAgICB7Om9rLCB2YWx1ZX0gLT4KICAgICAgICAgICAgJXsKICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgICAgICAgZW5jb2RlZDogZW5jLAogICAgICAgICAgICAgIGxhc3RfdXNlZDogU3RyaW5nLnRvX2ludGVnZXIobGFzdF91c2VkKSwKICAgICAgICAgICAgICBjb3VudDogU3RyaW5nLnRvX2ludGVnZXIoY291bnQpCiAgICAgICAgICAgIH0KCiAgICAgICAgICA6ZXJyb3IgLT4KICAgICAgICAgICAgbmlsCiAgICAgICAgZW5kCgogICAgICAjIDwtLSBXYXMgcmV0dXJuaW5nIGEgbWFwIHdpdGggZW1wdHkgZmllbGRzLCBub3cgYWx3YXlzIG5pbCBpZiBpbnZhbGlkCiAgICAgIF8gLT4KICAgICAgICBuaWwKICAgIGVuZAogIGVuZAoKICBkZWYgaGFuZGxlX2luZm8oOmNoZWNrX2NsaXBib2FyZCwgc3RhdGUpIGRvCiAgICBjdXJyZW50ID0gZ2V0X2NsaXBib2FyZCgpCiAgICBub3cgPSA6b3Muc3lzdGVtX3RpbWUoOnNlY29uZCkKICAgIGVudHJpZXMgPSBsaXN0X2hpc3RvcnkoKQoKICAgIGFscmVhZHlfdG9wID0KICAgICAgY2FzZSBlbnRyaWVzIGRvCiAgICAgICAgWyV7dmFsdWU6IF5jdXJyZW50fSB8IF9dIC0+IHRydWUKICAgICAgICBfIC0+IGZhbHNlCiAgICAgIGVuZAoKICAgIGNvbmQgZG8KICAgICAgY3VycmVudCA9PSBzdGF0ZS5sYXN0IG9yIGN1cnJlbnQgPT0gIiIgb3IgYWxyZWFkeV90b3AgLT4KICAgICAgICBzY2hlZHVsZV9jaGVjaygpCiAgICAgICAgezpub3JlcGx5LCBzdGF0ZX0KCiAgICAgIHRydWUgLT4KICAgICAgICAjIEZpbmQgYW5kIHJlbW92ZSBhbGwgb2NjdXJyZW5jZXMgb2YgYGN1cnJlbnRgCiAgICAgICAge2ZvdW5kLCByZXN0fSA9IEVudW0uc3BsaXRfd2l0aChlbnRyaWVzLCBmbiAle3ZhbHVlOiB2fSAtPiB2ID09IGN1cnJlbnQgZW5kKQogICAgICAgIGNvdW50ID0gKGZvdW5kIHw+IExpc3QuZmlyc3QoKSB8PiBNYXAuZ2V0KDpjb3VudCwgMCkpICsgMQoKICAgICAgICB1cGRhdGVkID0gWwogICAgICAgICAgJXt2YWx1ZTogY3VycmVudCwgZW5jb2RlZDogQmFzZS5lbmNvZGU2NChjdXJyZW50KSwgbGFzdF91c2VkOiBub3csIGNvdW50OiBjb3VudH0KICAgICAgICAgIHwgRW51bS5yZWplY3QocmVzdCwgZm4gZSAtPiBlLnZhbHVlID09IGN1cnJlbnQgZW5kKQogICAgICAgIF0KCiAgICAgICAgd3JpdGVfZW50cmllcyh1cGRhdGVkKQogICAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgICB7Om5vcmVwbHksICV7c3RhdGUgfCBsYXN0OiBjdXJyZW50fX0KICAgIGVuZAogIGVuZAoKICBkZWYgcHJvbW90ZV90b190b3BfYW5kX2RlZHVwKHNlbGVjdGVkX2NsaXApIGRvCiAgICBub3cgPSA6b3Muc3lzdGVtX3RpbWUoOnNlY29uZCkKCiAgICAjIExvYWQgYWxsCiAgICBlbnRyaWVzID0gbGlzdF9oaXN0b3J5KCkKCiAgICAjIFByb21vdGUgYW5kIHVwZGF0ZSB0aW1lc3RhbXAvY291bnQKICAgIHtmb3VuZCwgcmVzdH0gPSBFbnVtLnNwbGl0X3dpdGgoZW50cmllcywgZm4gJXt2YWx1ZTogdn0gLT4gdiA9PSBzZWxlY3RlZF9jbGlwIGVuZCkKICAgIGNvdW50ID0gKGZvdW5kIHw+IExpc3QuZmlyc3QoKSB8PiBNYXAuZ2V0KDpjb3VudCwgMCkpICsgMQoKICAgIHVwZGF0ZWQgPSBbCiAgICAgICV7dmFsdWU6IHNlbGVjdGVkX2NsaXAsIGVuY29kZWQ6IEJhc2UuZW5jb2RlNjQoc2VsZWN0ZWRfY2xpcCksIGxhc3RfdXNlZDogbm93LCBjb3VudDogY291bnR9CiAgICAgIHwgRW51bS5yZWplY3QocmVzdCwgZm4gZSAtPiBlLnZhbHVlID09IHNlbGVjdGVkX2NsaXAgZW5kKQogICAgXQoKICAgIHdyaXRlX2VudHJpZXModXBkYXRlZCkKICBlbmQKCiAgIyBFZmZpY2llbnQgdHJpbSBmdW5jdGlvbgogIGRlZnAgd3JpdGVfZW50cmllcyhlbnRyaWVzKSBkbwogICAgaWYgbGVuZ3RoKGVudHJpZXMpID4gQG1heF9lbnRyaWVzIGRvCiAgICAgIG5vdyA9IDpvcy5zeXN0ZW1fdGltZSg6c2Vjb25kKQogICAgICBjdXRvZmYgPSBub3cgLSA3ICogMjQgKiAzNjAwCgogICAgICAjIFByZWZlciB0byBkcm9wIG9sZCwgcmFyZWx5LXVzZWQsIG5ldmVyLXVzZWQgZW50cmllcwogICAgICBzbGltbWVkID0KICAgICAgICBlbnRyaWVzCiAgICAgICAgfD4gRW51bS5zb3J0X2J5KGZuICV7bGFzdF91c2VkOiBsdSwgY291bnQ6IGNudH0gLT4ge2x1ID49IGN1dG9mZiwgY250LCBsdX0gZW5kLCA6ZGVzYykKICAgICAgICB8PiBFbnVtLnRha2UoQG1heF9lbnRyaWVzKQoKICAgICAgRmlsZS53cml0ZSEoCiAgICAgICAgQGhpc3RvcnlfZmlsZSwKICAgICAgICAoRW51bS5tYXAoc2xpbW1lZCwgZm4gJXtlbmNvZGVkOiBlbmMsIGxhc3RfdXNlZDogbHUsIGNvdW50OiBjbnR9IC0+CiAgICAgICAgICAgIiN7ZW5jfXwje2x1fXwje2NudH0iCiAgICAgICAgIGVuZCkKICAgICAgICAgfD4gRW51bS5qb2luKCJcbiIpKSA8PiAiXG4iCiAgICAgICkKICAgIGVsc2UKICAgICAgRmlsZS53cml0ZSEoCiAgICAgICAgQGhpc3RvcnlfZmlsZSwKICAgICAgICAoRW51bS5tYXAoZW50cmllcywgZm4gJXtlbmNvZGVkOiBlbmMsIGxhc3RfdXNlZDogbHUsIGNvdW50OiBjbnR9IC0+CiAgICAgICAgICAgIiN7ZW5jfXwje2x1fXwje2NudH0iCiAgICAgICAgIGVuZCkKICAgICAgICAgfD4gRW51bS5qb2luKCJcbiIpKSA8PiAiXG4iCiAgICAgICkKICAgIGVuZAogIGVuZAoKICBkZWZwIGdldF9jbGlwYm9hcmQgZG8KICAgIHt0ZXh0LCAwfSA9IFN5c3RlbS5jbWQoInBicGFzdGUiLCBbXSkKICAgIFN0cmluZy50cmltX3RyYWlsaW5nKHRleHQpCiAgZW5kCgogIGRlZnAgc2NoZWR1bGVfY2hlY2soKSwgZG86IFByb2Nlc3Muc2VuZF9hZnRlcihzZWxmKCksIDpjaGVja19jbGlwYm9hcmQsIEBjaGVja19pbnRlcnZhbCkKZW5k|1749924666|1
ZGVmbW9kdWxlIENsaXBpeGlyLlBpY2tlciBkbwogIEBtYXhfZGlzcGxheSAzMAoKICBkZWYgcGlja19hbmRfY29weSBkbwogICAgZW50cmllcyA9IENsaXBpeGlyLmxpc3RfaGlzdG9yeSgpCgogICAgaWYgZW50cmllcyA9PSBbXSBkbwogICAgICBJTy5wdXRzKElPLkFOU0kucmVkKCkgPD4gIuKdlyBObyBjbGlwYm9hcmQgaGlzdG9yeSBmb3VuZCEiIDw+IElPLkFOU0kucmVzZXQoKSkKICAgIGVsc2UKICAgICAgbG9vcChlbnRyaWVzKQogICAgZW5kCiAgZW5kCgogIGRlZnAgbG9vcChlbnRyaWVzLCBmaWx0ZXJlZCBcXCBuaWwsIHNlYXJjaHRlcm0gXFwgbmlsKSBkbwogICAgaXRlbXMgPSBmaWx0ZXJlZCB8fCBlbnRyaWVzCiAgICBkaXNwbGF5X2NvdW50ID0gbWluKGxlbmd0aChpdGVtcyksIEBtYXhfZGlzcGxheSkKICAgIElPLnB1dHMoIiIpCgogICAgSU8ucHV0cygKICAgICAgSU8uQU5TSS55ZWxsb3coKSA8PgogICAgICAgICLilIAgQ2xpcGJvYXJkIEhpc3RvcnkgUGlja2VyIOKUgCAoc2hvd2luZyAje2Rpc3BsYXlfY291bnR9IG9mICN7bGVuZ3RoKGl0ZW1zKX0pIFxuIiA8PgogICAgICAgIElPLkFOU0kucmVzZXQoKQogICAgKQoKICAgIEVudW0ud2l0aF9pbmRleChpdGVtcykKICAgIHw+IEVudW0udGFrZShAbWF4X2Rpc3BsYXkpCiAgICB8PiBFbnVtLmVhY2goZm4ge2VudHJ5LCBpZHh9IC0+CiAgICAgIGxpbmVzID0gZW50cnkudmFsdWUgfD4gU3RyaW5nLnNwbGl0KCJcbiIpCgogICAgICBwcmV2aWV3X3RpdGxlID0KICAgICAgICBsaW5lcyB8PiBMaXN0LmZpcnN0KCkgfD4gdGFrZV9hbmRfZWxsaXBzaXplKDYwKSB8PiBoaWdobGlnaHRfc2VhcmNoKHNlYXJjaHRlcm0pCgogICAgICBzbmlwcGV0ID0KICAgICAgICBsaW5lcwogICAgICAgIHw+IEVudW0uZHJvcCgxKQogICAgICAgIHw+IEVudW0uam9pbigiICIpCiAgICAgICAgfD4gdGFrZV9hbmRfZWxsaXBzaXplKDQwKQogICAgICAgIHw+IGhpZ2hsaWdodF9zZWFyY2goc2VhcmNodGVybSkKCiAgICAgIGlkeF90eHQgPSBJTy5BTlNJLmdyZWVuKCkgPD4gIlsje2lkeH1dIiA8PiBJTy5BTlNJLnJlc2V0KCkKICAgICAgSU8ucHV0cygiI3tpZHhfdHh0fSAje0lPLkFOU0kuYnJpZ2h0KCl9I3twcmV2aWV3X3RpdGxlfSN7SU8uQU5TSS5yZXNldCgpfSIpCgogICAgICBpZiBzbmlwcGV0ICE9ICIiIGRvCiAgICAgICAgSU8ucHV0cygiICAgICN7SU8uQU5TSS5jeWFuKCl9I3tzbmlwcGV0fSN7SU8uQU5TSS5yZXNldCgpfSIpCiAgICAgIGVuZAoKICAgICAgSU8ucHV0cyhJTy5BTlNJLmZhaW50KCkgPD4gU3RyaW5nLmR1cGxpY2F0ZSgi4pSAIiwgNjApIDw+IElPLkFOU0kucmVzZXQoKSkKICAgIGVuZCkKCiAgICBpZiBsZW5ndGgoaXRlbXMpID4gQG1heF9kaXNwbGF5IGRvCiAgICAgIElPLnB1dHMoCiAgICAgICAgSU8uQU5TSS5icmlnaHQoKSA8PgogICAgICAgICAgSU8uQU5TSS5tYWdlbnRhKCkgPD4KICAgICAgICAgICIoc2hvd2luZyBmaXJzdCAje0BtYXhfZGlzcGxheX0gcmVzdWx0czsgL3NlYXJjaCB0byBuYXJyb3cgbGlzdCkiIDw+CiAgICAgICAgICBJTy5BTlNJLnJlc2V0KCkKICAgICAgKQogICAgZW5kCgogICAgSU8ud3JpdGUoCiAgICAgICJcbiIgPD4KICAgICAgICBJTy5BTlNJLmJyaWdodCgpIDw+CiAgICAgICAgIlR5cGUgIiA8PgogICAgICAgIElPLkFOU0kuZ3JlZW4oKSA8PgogICAgICAgICJudW1iZXIiIDw+CiAgICAgICAgSU8uQU5TSS5yZXNldCgpIDw+CiAgICAgICAgSU8uQU5TSS5icmlnaHQoKSA8PgogICAgICAgICIsICIgPD4KICAgICAgICBJTy5BTlNJLm1hZ2VudGEoKSA8PgogICAgICAgICIvc2VhcmNoIiA8PgogICAgICAgIElPLkFOU0kucmVzZXQoKSA8PgogICAgICAgIElPLkFOU0kuYnJpZ2h0KCkgPD4KICAgICAgICAiLCBvciAiIDw+CiAgICAgICAgSU8uQU5TSS5yZWQoKSA8PgogICAgICAgICJxIiA8PgogICAgICAgIElPLkFOU0kucmVzZXQoKSA8PgogICAgICAgIElPLkFOU0kuYnJpZ2h0KCkgPD4KICAgICAgICAiIHRvIHF1aXQ6ICIgPD4KICAgICAgICBJTy5BTlNJLnJlc2V0KCkKICAgICkKCiAgICBpbnB1dCA9IElPLmdldHMoIiIpIHw+IHRvX3N0cmluZygpIHw+IFN0cmluZy50cmltKCkKCiAgICBjb25kIGRvCiAgICAgIGlucHV0IGluIFsicSIsICJRIl0gLT4KICAgICAgICBJTy5wdXRzKElPLkFOU0kueWVsbG93KCkgPD4gIkdvb2RieWUhIiA8PiBJTy5BTlNJLnJlc2V0KCkpCgogICAgICBTdHJpbmcuc3RhcnRzX3dpdGg/KGlucHV0LCAiLyIpIC0+CiAgICAgICAgdGVybSA9IFN0cmluZy50cmltX2xlYWRpbmcoaW5wdXQsICIvIikgfD4gU3RyaW5nLmRvd25jYXNlKCkKCiAgICAgICAgbWF0Y2hlcyA9CiAgICAgICAgICBlbnRyaWVzCiAgICAgICAgICB8PiBFbnVtLndpdGhfaW5kZXgoKQogICAgICAgICAgfD4gRW51bS5tYXAoZm4ge2VudHJ5LCBpZHh9IC0+IHtlbnRyeSwgaWR4LCBmdXp6eV9zY29yZShlbnRyeS52YWx1ZSwgdGVybSl9IGVuZCkKICAgICAgICAgIHw+IEVudW0uZmlsdGVyKGZuIHtfZSwgX2ksIHNjb3JlfSAtPiBzY29yZSA8IDEwMDAwIGVuZCkKICAgICAgICAgIHw+IEVudW0uc29ydF9ieShmbiB7X2UsIF9pLCBzY29yZX0gLT4gc2NvcmUgZW5kKQogICAgICAgICAgfD4gRW51bS5tYXAoZm4ge2VudHJ5LCBfaWR4LCBfc2NvcmV9IC0+IGVudHJ5IGVuZCkKCiAgICAgICAgaWYgbWF0Y2hlcyA9PSBbXSBkbwogICAgICAgICAgSU8ucHV0cyhJTy5BTlNJLnJlZCgpIDw+ICJObyBlbnRyaWVzIG1hdGNoaW5nICN7aW5zcGVjdCh0ZXJtKX0iIDw+IElPLkFOU0kucmVzZXQoKSkKICAgICAgICBlbmQKCiAgICAgICAgbG9vcChlbnRyaWVzLCBtYXRjaGVzLCB0ZXJtKQoKICAgICAgSW50ZWdlci5wYXJzZShpbnB1dCkgIT0gOmVycm9yIC0+CiAgICAgICAge2ksIF99ID0gSW50ZWdlci5wYXJzZShpbnB1dCkKCiAgICAgICAgaWYgaSA+PSAwIGFuZCBpIDwgbGVuZ3RoKGl0ZW1zKSBkbwogICAgICAgICAgY2xpcCA9IEVudW0uYXQoaXRlbXMsIGkpCiAgICAgICAgICBTeXN0ZW0uY21kKCJzaCIsIFsiLWMiLCAicHJpbnRmICclcycgXCIkMVwiIHwgcGJjb3B5IiwgIl8iLCBjbGlwXSkKICAgICAgICAgIENsaXBpeGlyLnByb21vdGVfdG9fdG9wX2FuZF9kZWR1cChjbGlwKQoKICAgICAgICAgIElPLnB1dHMoCiAgICAgICAgICAgIElPLkFOU0kuZ3JlZW4oKSA8PgogICAgICAgICAgICAgICJDb3BpZWQgZW50cnkgIyN7aX0gdG8gY2xpcGJvYXJkLCBub3cgcHJvbW90ZWQgdG8gdG9wISIgPD4gSU8uQU5TSS5yZXNldCgpCiAgICAgICAgICApCiAgICAgICAgZWxzZQogICAgICAgICAgSU8ucHV0cyhJTy5BTlNJLnJlZCgpIDw+ICJJbnZhbGlkIG51bWJlcjogI3tpbnB1dH0iIDw+IElPLkFOU0kucmVzZXQoKSkKICAgICAgICAgIGxvb3AoZW50cmllcywgZmlsdGVyZWQsIHNlYXJjaHRlcm0pCiAgICAgICAgZW5kCgogICAgICB0cnVlIC0+CiAgICAgICAgSU8ucHV0cyhJTy5BTlNJLnJlZCgpIDw+ICJVbnJlY29nbml6ZWQgaW5wdXQ6ICN7aW5zcGVjdChpbnB1dCl9IiA8PiBJTy5BTlNJLnJlc2V0KCkpCiAgICAgICAgbG9vcChlbnRyaWVzLCBmaWx0ZXJlZCwgc2VhcmNodGVybSkKICAgIGVuZAogIGVuZAoKICAjIEhlbHBlcnMKCiAgIyBMb3dlciBzY29yZSBpcyBiZXR0ZXIKICBkZWZwIGZ1enp5X3Njb3JlKF9lbnRyeSwgIiIpLCBkbzogMTAwMDAKICBkZWZwIGZ1enp5X3Njb3JlKG5pbCwgX3Rlcm0pLCBkbzogMTAwMDAKCiAgZGVmcCBmdXp6eV9zY29yZShlbnRyeSwgdGVybSkgZG8KICAgIHRleHQgPSBTdHJpbmcuZG93bmNhc2UoZW50cnkpCgogICAgY29uZCBkbwogICAgICBTdHJpbmcuY29udGFpbnM/KHRleHQsIHRlcm0pIC0+CiAgICAgICAgY2FzZSA6YmluYXJ5Lm1hdGNoKHRleHQsIHRlcm0pIGRvCiAgICAgICAgICB7aWR4LCBfbGVufSAtPiBpZHgKICAgICAgICAgIDpub21hdGNoIC0+IDAKICAgICAgICBlbmQKCiAgICAgIGZ1enp5X2luY2x1ZGVzPyh0ZXh0LCB0ZXJtKSAtPgogICAgICAgIDUwMDAgKyBmdXp6eV9kaXN0YW5jZSh0ZXh0LCB0ZXJtKQoKICAgICAgdHJ1ZSAtPgogICAgICAgIDEwMDAwCiAgICBlbmQKICBlbmQKCiAgIyBBY2NlcHRzIGFsbCBsZXR0ZXJzIG9mIGB0ZXJtYCBpbiBvcmRlciAobGlrZSBmemYpCiAgZGVmcCBmdXp6eV9pbmNsdWRlcz8oX3RleHQsICIiKSwgZG86IGZhbHNlCiAgZGVmcCBmdXp6eV9pbmNsdWRlcz8oX3RleHQsIG5pbCksIGRvOiBmYWxzZQoKICBkZWZwIGZ1enp5X2luY2x1ZGVzPyh0ZXh0LCB0ZXJtKSBkbwogICAgY2hhcnMgPSBTdHJpbmcuZ3JhcGhlbWVzKHRlcm0pCiAgICByZWR1Y2VfZnV6enkodGV4dCwgY2hhcnMpCiAgZW5kCgogIGRlZnAgcmVkdWNlX2Z1enp5KF8sIFtdKSwgZG86IHRydWUKICBkZWZwIHJlZHVjZV9mdXp6eSgiIiwgXyksIGRvOiBmYWxzZQoKICBkZWZwIHJlZHVjZV9mdXp6eSh0ZXh0LCBbYyB8IHJlc3RdKSBkbwogICAgY2FzZSBTdHJpbmcuc3BsaXQodGV4dCwgYywgcGFydHM6IDIpIGRvCiAgICAgIFtfLCByZW1dIC0+IHJlZHVjZV9mdXp6eShyZW0sIHJlc3QpCiAgICAgIFtfXSAtPiBmYWxzZQogICAgZW5kCiAgZW5kCgogICMgQ3J1ZGUgImZ1enp5IiBkaXN0YW5jZQogIGRlZnAgZnV6enlfZGlzdGFuY2UodGV4dCwgdGVybSkgZG8KICAgICMgVG90YWwgZGlzdGFuY2UgYmV0d2VlbiBjaGFyYWN0ZXIgbWF0Y2hlcwogICAgY2hhcnMgPSBTdHJpbmcuZ3JhcGhlbWVzKHRlcm0pCiAgICBmaW5kX2Rpc3RhbmNlKHRleHQsIGNoYXJzLCAwKQogIGVuZAoKICBkZWZwIGZpbmRfZGlzdGFuY2UoXywgW10sIGRpc3QpLCBkbzogZGlzdAoKICBkZWZwIGZpbmRfZGlzdGFuY2UodGV4dCwgW2MgfCByZXN0XSwgZGlzdCkgZG8KICAgIGNhc2UgOmJpbmFyeS5tYXRjaCh0ZXh0LCBjKSBkbwogICAgICB7aWR4LCBfbGVufSAtPiBmaW5kX2Rpc3RhbmNlKFN0cmluZy5zbGljZSh0ZXh0LCAoaWR4ICsgMSkuLi0xKSwgcmVzdCwgZGlzdCArIGlkeCkKICAgICAgOm5vbWF0Y2ggLT4gNTAwMCArIGRpc3QKICAgIGVuZAogIGVuZAoKICBkZWZwIHRha2VfYW5kX2VsbGlwc2l6ZShuaWwsIF8pLCBkbzogIiIKCiAgZGVmcCB0YWtlX2FuZF9lbGxpcHNpemUoc3RyLCBuKSB3aGVuIGlzX2JpbmFyeShzdHIpIGRvCiAgICBpZiBTdHJpbmcubGVuZ3RoKHN0cikgPiBuLCBkbzogU3RyaW5nLnNsaWNlKHN0ciwgMCwgbikgPD4gIi4uLiIsIGVsc2U6IHN0cgogIGVuZAoKICBkZWZwIGhpZ2hsaWdodF9zZWFyY2goc3RyLCBuaWwpLCBkbzogc3RyCiAgZGVmcCBoaWdobGlnaHRfc2VhcmNoKHN0ciwgIiIpLCBkbzogc3RyCgogIGRlZnAgaGlnaGxpZ2h0X3NlYXJjaChzdHIsIHRlcm0pIGRvCiAgICBTdHJpbmcucmVwbGFjZSgKICAgICAgc3RyLAogICAgICB+ci8oI3tSZWdleC5lc2NhcGUodGVybSl9KS9pLAogICAgICBJTy5BTlNJLm1hZ2VudGEoKSA8PiAiXFwxIiA8PiBJTy5BTlNJLnJlc2V0KCkKICAgICkKICBlbmQKZW5k|1749924662|1
bGliL3BpY2tlci5leDoxMDk=|1749924547|1
4p6cICBjbGlwaXhpciBnaXQ6KG1haW4pIOKclyAuL2NsaXBpeGlyIHNlbGVjdAoK4pSAIENsaXBib2FyZCBIaXN0b3J5IFBpY2tlciDilIAgKHNob3dpbmcgMTIgb2YgMTIpIAoKWzBdIGRlZiBoYW5kbGVfaW5mbyg6Y2hlY2tfY2xpcGJvYXJkLCBzdGF0ZSkgZG8KICAgICAgY3VycmVudCA9IGdldF9jbGlwYm9hcmQoKSAgIG5vdyA9IDpvcy4uLi4K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAClsxXSBkZWYgaGFuZGxlX2luZm8oOmNoZWNrX2NsaXBib2FyZCwgc3RhdGUpIGRvCiAgICAgICAgY3VycmVudCA9IGdldF9jbGlwYm9hcmQoKSAgICAgbm93ID0gLi4uCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgApbMl0gZGVmIGhhbmRsZV9pbmZvKDpjaGVja19jbGlwYm9hcmQsIHN0YXRlKSBkbwogICAgICAgIGN1cnJlbnQgPSBnZXRfY2xpcGJvYXJkKCkgICAgIG5vdyA9IC4uLgrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzNdIEFkZCBuZXcgZW50cnkK4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSACls0XSBwcm9tb3RlX3RvX3RvcF9hbmRfZGVkdXAK4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSACls1XSBmb3VuZArilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzZdIGhhbmRsZV9pbmZvCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgApbN10gCiAgICDilIAgQ2xpcGJvYXJkIEhpc3RvcnkgUGlja2VyIOKUgCAoc2hvd2luZyA0IC4uLgrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzhdIFBpY2tlcgrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzldIOKUgCBDbGlwYm9hcmQgSGlzdG9yeSBQaWNrZXIg4pSAIChzaG93aW5nIDIgb2YgMikK4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAClsxMF0gSGlzdG9yeQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzExXSBwcmV2aWV3X3RpdGxlCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgAoKVHlwZSBudW1iZXIsIC9zZWFyY2gsIG9yIHEgdG8gcXVpdDogNAoqKiAoQXJndW1lbnRFcnJvcikgYWxsIGFyZ3VtZW50cyBmb3IgU3lzdGVtLmNtZC8zIG11c3QgYmUgYmluYXJpZXMKICAgIChlbGl4aXIgMS4xNi4zKSBsaWIvc3lzdGVtLmV4OjExMTE6IFN5c3RlbS5jbWQvMwogICAgKGNsaXBpeGlyIDAuMS4wKSBsaWIvcGlja2VyLmV4OjEwOTogQ2xpcGl4aXIuUGlja2VyLmxvb3AvMwogICAgKGVsaXhpciAxLjE2LjMpIGxpYi9rZXJuZWwvY2xpLmV4OjEzNjogYW5vbnltb3VzIGZuLzMgaW4gS2VybmVsLkNMSS5leGVjX2Z1bi8y|1749924493|1
ZGVmIGhhbmRsZV9pbmZvKDpjaGVja19jbGlwYm9hcmQsIHN0YXRlKSBkbwogIGN1cnJlbnQgPSBnZXRfY2xpcGJvYXJkKCkKICBub3cgPSA6b3Muc3lzdGVtX3RpbWUoOnNlY29uZCkKICBlbnRyaWVzID0gbGlzdF9oaXN0b3J5KCkKCiAgYWxyZWFkeV90b3AgPSBjYXNlIGVudHJpZXMgZG8KICAgIFsle3ZhbHVlOiBeY3VycmVudH0gfCBfXSAtPiB0cnVlCiAgICBfIC0+IGZhbHNlCiAgZW5kCgogIGNvbmQgZG8KICAgIGN1cnJlbnQgPT0gc3RhdGUubGFzdCBvciBjdXJyZW50ID09ICIiIG9yIGFscmVhZHlfdG9wIC0+CiAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgezpub3JlcGx5LCBzdGF0ZX0KCiAgICB0cnVlIC0+CiAgICAgICMgRmluZCBhbmQgcmVtb3ZlIGFsbCBvY2N1cnJlbmNlcyBvZiBgY3VycmVudGAKICAgICAge2ZvdW5kLCByZXN0fSA9IEVudW0uc3BsaXRfd2l0aChlbnRyaWVzLCBmbiAle3ZhbHVlOiB2fSAtPiB2ID09IGN1cnJlbnQgZW5kKQogICAgICBjb3VudCA9IChmb3VuZCB8PiBMaXN0LmZpcnN0KCkgfD4gTWFwLmdldCg6Y291bnQsIDApKSArIDEKCiAgICAgIHVwZGF0ZWQgPSBbCiAgICAgICAgJXt2YWx1ZTogY3VycmVudCwgZW5jb2RlZDogQmFzZS5lbmNvZGU2NChjdXJyZW50KSwgbGFzdF91c2VkOiBub3csIGNvdW50OiBjb3VudH0KICAgICAgICB8IEVudW0ucmVqZWN0KHJlc3QsIGZuIGUgLT4gZS52YWx1ZSA9PSBjdXJyZW50IGVuZCkKICAgICAgXQoKICAgICAgd3JpdGVfZW50cmllcyh1cGRhdGVkKQogICAgICBzY2hlZHVsZV9jaGVjaygpCiAgICAgIHs6bm9yZXBseSwgJXtzdGF0ZSB8IGxhc3Q6IGN1cnJlbnR9fQogIGVuZAplbmQ=|1749924441|1
ZGVmIGhhbmRsZV9pbmZvKDpjaGVja19jbGlwYm9hcmQsIHN0YXRlKSBkbwogICAgY3VycmVudCA9IGdldF9jbGlwYm9hcmQoKQogICAgbm93ID0gOm9zLnN5c3RlbV90aW1lKDpzZWNvbmQpCgogICAgIyBMb2FkIGFuZCBwYXJzZSBhbGwKICAgIGVudHJpZXMgPSBsaXN0X2hpc3RvcnkoKQoKICAgICMgQ2hlY2sgZm9yIGR1cGxpY2F0ZSAoYnkgY29udGVudCkKICAgIGZvdW5kID0gRW51bS5maW5kKGVudHJpZXMsIGZuICV7dmFsdWU6IHZ9IC0+IHYgPT0gY3VycmVudCBlbmQpCgogICAgY29uZCBkbwogICAgICBjdXJyZW50ID09IHN0YXRlLmxhc3Qgb3IgY3VycmVudCA9PSAiIiAtPgogICAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgICB7Om5vcmVwbHksIHN0YXRlfQoKICAgICAgZm91bmQgIT0gbmlsIC0+CiAgICAgICAgIyBVcGRhdGUgbGFzdF91c2VkIGFuZCBjb3VudAogICAgICAgIHVwZGF0ZWQgPQogICAgICAgICAgRW51bS5tYXAoZW50cmllcywgZm4gZW50cnkgLT4KICAgICAgICAgICAgaWYgZW50cnkudmFsdWUgPT0gY3VycmVudCBkbwogICAgICAgICAgICAgICV7ZW50cnkgfCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IGVudHJ5LmNvdW50ICsgMX0KICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIGVudHJ5CiAgICAgICAgICAgIGVuZAogICAgICAgICAgZW5kKQoKICAgICAgICB3cml0ZV9lbnRyaWVzKHVwZGF0ZWQpCiAgICAgICAgc2NoZWR1bGVfY2hlY2soKQogICAgICAgIHs6bm9yZXBseSwgJXtzdGF0ZSB8IGxhc3Q6IGN1cnJlbnR9fQoKICAgICAgdHJ1ZSAtPgogICAgICAgICMgQWRkIG5ldyBlbnRyeQogICAgICAgIHVwZGF0ZWQgPSBbCiAgICAgICAgICAle3ZhbHVlOiBjdXJyZW50LCBlbmNvZGVkOiBCYXNlLmVuY29kZTY0KGN1cnJlbnQpLCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IDF9IHwgZW50cmllcwogICAgICAgIF0KCiAgICAgICAgd3JpdGVfZW50cmllcyh1cGRhdGVkKQogICAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgICB7Om5vcmVwbHksICV7c3RhdGUgfCBsYXN0OiBjdXJyZW50fX0KICAgIGVuZAogIGVuZA==|1749924364|1
ZGVmIGhhbmRsZV9pbmZvKDpjaGVja19jbGlwYm9hcmQsIHN0YXRlKSBkbwogICAgY3VycmVudCA9IGdldF9jbGlwYm9hcmQoKQogICAgbm93ID0gOm9zLnN5c3RlbV90aW1lKDpzZWNvbmQpCgogICAgIyBMb2FkIGFuZCBwYXJzZSBhbGwKICAgIGVudHJpZXMgPSBsaXN0X2hpc3RvcnkoKQoKICAgICMgQ2hlY2sgZm9yIGR1cGxpY2F0ZSAoYnkgY29udGVudCkKICAgIGZvdW5kID0gRW51bS5maW5kKGVudHJpZXMsIGZuICV7dmFsdWU6IHZ9IC0+IHYgPT0gY3VycmVudCBlbmQpCgogICAgY29uZCBkbwogICAgICBjdXJyZW50ID09IHN0YXRlLmxhc3Qgb3IgY3VycmVudCA9PSAiIiAtPgogICAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgICB7Om5vcmVwbHksIHN0YXRlfQoKICAgICAgZm91bmQgIT0gbmlsIC0+CiAgICAgICAgIyBVcGRhdGUgbGFzdF91c2VkIGFuZCBjb3VudAogICAgICAgIHVwZGF0ZWQgPQogICAgICAgICAgRW51bS5tYXAoZW50cmllcywgZm4gZW50cnkgLT4KICAgICAgICAgICAgaWYgZW50cnkudmFsdWUgPT0gY3VycmVudCBkbwogICAgICAgICAgICAgIHByb21vdGVfdG9fdG9wX2FuZF9kZWR1cChjdXJyZW50KQogICAgICAgICAgICAgICV7ZW50cnkgfCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IGVudHJ5LmNvdW50ICsgMX0KICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIGVudHJ5CiAgICAgICAgICAgIGVuZAogICAgICAgICAgZW5kKQoKICAgICAgICB3cml0ZV9lbnRyaWVzKHVwZGF0ZWQpCiAgICAgICAgc2NoZWR1bGVfY2hlY2soKQogICAgICAgIHs6bm9yZXBseSwgJXtzdGF0ZSB8IGxhc3Q6IGN1cnJlbnR9fQoKICAgICAgdHJ1ZSAtPgogICAgICAgICMgQWRkIG5ldyBlbnRyeQogICAgICAgIHVwZGF0ZWQgPSBbCiAgICAgICAgICAle3ZhbHVlOiBjdXJyZW50LCBlbmNvZGVkOiBCYXNlLmVuY29kZTY0KGN1cnJlbnQpLCBsYXN0X3VzZWQ6IG5vdywgY291bnQ6IDF9IHwgZW50cmllcwogICAgICAgIF0KCiAgICAgICAgd3JpdGVfZW50cmllcyh1cGRhdGVkKQogICAgICAgIHNjaGVkdWxlX2NoZWNrKCkKICAgICAgICB7Om5vcmVwbHksICV7c3RhdGUgfCBsYXN0OiBjdXJyZW50fX0KICAgIGVuZAogIGVuZA==|1749924573|2
QWRkIG5ldyBlbnRyeQ==|1749924101|1
cHJvbW90ZV90b190b3BfYW5kX2RlZHVw|1749924501|4
Zm91bmQ=|1749924086|2
aGFuZGxlX2luZm8=|1749923972|1
CuKUgCBDbGlwYm9hcmQgSGlzdG9yeSBQaWNrZXIg4pSAIChzaG93aW5nIDQgb2YgNCkgCgpbMF0gUGlja2VyCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgApbMV0g4pSAIENsaXBib2FyZCBIaXN0b3J5IFBpY2tlciDilIAgKHNob3dpbmcgMiBvZiAyKQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAKWzJdIEhpc3RvcnkK4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAClszXSBwcmV2aWV3X3RpdGxlCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA==|1749923928|1
4pSAIENsaXBib2FyZCBIaXN0b3J5IFBpY2tlciDilIAgKHNob3dpbmcgMiBvZiAyKQ==|1749923865|1
SGlzdG9yeQ==|1749923886|3
cHJldmlld190aXRsZQ==|1749923824|1
